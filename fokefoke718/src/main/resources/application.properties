# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.driver-class-name=com.mysql.java.dbc.Driver
 
# DB Source URL
spring.datasource.url=jdbc:mysql://144.24.90.142/foke_db?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
 
# DB username
spring.datasource.username=super
 
# DB password
spring.datasource.password=password
 

# true 설정시 JPA 쿼리문 확인 가능
spring.jpa.show-sql=true
 
# DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
spring.jpa.hibernate.ddl-auto=update
 
# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Entity 자동 언더바 변경 삭제
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

# MongoDB configuration
#spring.data.mongodb.uri=mongodb://localhost:27017/chatdb

# Google OAuth
spring.security.oauth2.client.registration.google.client-id=799520441888-g83b2vdbh2bt5jg02ou1hpse5ejj6lf0.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

# Facebook OAuth
spring.security.oauth2.client.registration.facebook.client-id=817747282904667
spring.security.oauth2.client.registration.facebook.client-secret=58c1b3a60798e2302d2be326b715ce3d
spring.security.oauth2.client.registration.facebook.scope=public_profile,email

# Naver OAuth
spring.security.oauth2.client.registration.naver.client-id=2mDNwCpiCUiQfb8G38s7
spring.security.oauth2.client.registration.naver.client-secret=HLPxS2UmCC
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao OAuth
spring.security.oauth2.client.registration.kakao.client-id = d0f89f20b3d954ccfdf6859af565f80b
spring.security.oauth2.client.registration.kakao.client-secret = ahIYprPeL5SmWwrdSNdAb3dQ6stEpWvq
spring.security.oauth2.client.registration.kakao.scope = profile_nickname, account_email
spring.security.oauth2.client.registration.kakao.client-name = Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri = http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method = client_secret_post

spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = id

server.port=8081
